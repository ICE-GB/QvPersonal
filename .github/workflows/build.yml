name: Build for Desktop

on:
  push:
  pull_request:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  build:
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows MSVC", artifact: "Windows-MSVC",
            os: windows-latest,
            cc: "cl.exe", cxx: "cl.exe",
            arch: "win64_msvc2019_64",
            has_msvc: true,
            vcpkgTriplet: x64-windows
          }
        - {
            name: "Ubuntu", artifact: "Linux",
            os: ubuntu-latest,
            vcpkgTriplet: x64-linux
          }
        - {
            name: "macOS", artifact: "macOS",
            os: macos-latest,
            vcpkgTriplet: x64-osx
          }
 

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Install MSVC compiler
      if: matrix.config.has_msvc
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.13.2
      with:
        version: 6.2.0
        arch: ${{ matrix.config.arch }}

    - name: run-vcpkg
      uses: lukka/run-vcpkg@v7.3
      with:
        vcpkgArguments: protobuf openssl grpc libuv uvw
        vcpkgGitCommitId: 08214e18eeb146542944067c35d77faca8962be5
        vcpkgTriplet: ${{ matrix.config.vcpkgTriplet }}
  
    - name: Build
      run: |
        mkdir build; cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=installed \
          -DBUILD_TESTING=OFF \
          -DUSE_SYSTEM_LIBUV=ON \
          -DUSE_SYSTEM_UVW=ON \
          -GNinja
        cmake --build . --parallel

    - name: Install
      if: matrix.config.os == 'windows-latest'
      run: |
        cd build
        cmake --install .

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      if: matrix.config.os == 'windows-latest'
      with:
        name: Qv2ray-${{ matrix.config.artifact }}.zip
        path: build/installed
